@using Microsoft.AspNetCore.Identity
@using BBAPP.Data.Models // Asegúrate de que este namespace es correcto para tu UsuarioAplicacion

@inject SignInManager<UsuarioAplicacion> SignInManager
@inject UserManager<UsuarioAplicacion> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        // En Razor Pages, puedes obtener directamente el nombre de usuario autenticado.
        // Si necesitas Nombre y Apellido desde tu modelo UsuarioAplicacion de forma asíncrona,
        // en un .cshtml, la forma más apropiada es usar un ViewComponent o pasar el dato
        // a través del modelo de la página Razor. Para una simple visualización en _LoginPartial.cshtml,
        // UserManager.GetUserName(User) suele ser suficiente y es síncrono.
        var userDisplayName = UserManager.GetUserName(User);

        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage" title="Manage">¡Hola, @userDisplayName!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Cerrar sesión</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Registrarse</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Iniciar sesión</a>
        </li>
    }
</ul>
